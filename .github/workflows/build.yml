name: build

on: [push]

jobs:
  Emscripten:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        shell: cmd
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          call emsdk.bat install latest-upstream
          call emsdk.bat activate latest-upstream
          cd ..
      - name: Download SDL2
        run: C:\msys64\usr\bin\wget.exe -O SDL2-version_22.zip -q https://github.com/emscripten-ports/SDL2/archive/version_22.zip
      - name: Install SDL2
        run: |
          mkdir InstallLibs
          mkdir InstallLibs\include
          mkdir InstallLibs\include\SDL2
          7z x SDL2-version_22.zip -oInstallLibs
          copy InstallLibs\SDL2-version_22\include\*.* InstallLibs\include\SDL2
      - name: Build
        shell: cmd
        run: |
          cd Assets
          python BuildAssetBundles.py
          cd ..
          mkdir Bin\BuiltIn
          copy Bin\BuiltIn.zip Bin\BuiltIn
          call emsdk\emsdk_env.bat
          cmake -DCMAKE_TOOLCHAIN_FILE=emsdk\upstream\emscripten\cmake\Modules\Platform\Emscripten.cmake  -S . -B ./PrjEmscripten -G "MinGW Makefiles" -DCMAKE_SH="CMAKE_SH-NOTFOUND"
          mingw32-make -C PrjEmscripten
      - name: Package
        shell: cmd
        run: |
          mkdir Build
          type Version.txt
          set /p CONFIG_VERSION=<Version.txt
          set file_version=%CONFIG_VERSION:.=_%
          set output=SkylichtDemo_%file_version%_Emscripten.zip
          cd Bin
          7z a %output% *.zip
          7z a %output% *.wasm.*
          7z a %output% *.html
          cd..
          copy Bin\%output% Build
          dir -l Bin\%output% Build
    #- name: Result
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: SkylichtDemo_Emscripten
    #    path: Build

  # Universal_Windows_Platform:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Build
  #       shell: cmd
  #       run: |
  #         cd Assets
  #         python BuildAssetBundles.py
  #         cd ..
  #         mkdir PrjUWP
  #         mkdir PrjUWP\Projects
  #         cmake -S . -B ./PrjUWP -G "Visual Studio 16 2019" -A x64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION=10.0
  #         cmake --build ./PrjUWP --config "Release"

  Linux-Static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y libglfw3-dev libopenal-dev libx11-dev
      - name: Build
        run: |
          cmake -S. -BPrjLinux
          cd Assets
          python BuildAssetBundles.py
          cd ..
          make -C PrjLinux
      - name: Unit Test
        run: |
          cd PrjLinux
          ctest --verpose
          cd ..
      - name: Package
        run: |
          mkdir Build
          ls -l Bin
          version=$(cat "Version.txt")
          file_version=${version//./_}
          output=../Build/SkylichtDemo_${file_version}_Linux.zip
          cd Bin
          7z a ${output} ./*
          cd ..
          ls -l Build
    #- name: Result
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: SkylichtDemo_Linux
    #    path: Build

  Linux-Shared:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y libglfw3-dev libopenal-dev libx11-dev
      - name: Build
        run: |
          cmake -S. -BPrjLinux -DBUILD_SHARED_LIBS=ON
          cd Assets
          python BuildAssetBundles.py
          cd ..
          make -C PrjLinux
      - name: Unit Test
        run: |
          cd PrjLinux
          ctest --verpose
          cd ..
      - name: Package
        run: |
          mkdir Build
          ls -l Bin
          version=$(cat "Version.txt")
          file_version=${version//./_}
          output=../Build/SkylichtDemo_${file_version}_Linux.zip
          cd Bin
          7z a ${output} ./*
          cd ..
          ls -l Build
    #- name: Result
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: SkylichtDemo_Linux_Shared
    #    path: Build

  MacOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: |
          brew install libomp
          cd Assets
          python BuildAssetBundles.py
          cd ..
          cmake -S . -B ./PrjMac -G Xcode -DCMAKE_OSX_ARCHITECTURES=x86_64
          cd PrjMac
          xcodebuild -configuration Release
          cd ..
      - name: Unit Test
        run: |
          cd PrjMac
          ctest --verpose --output-on-failure -C Release
          cat Testing/Temporary/LastTest.log
          cd ..
      - name: Package
        run: |
          brew install p7zip
          mkdir Build
          ls -l Bin/Release
          version=$(cat "Version.txt")
          file_version=${version//./_}
          output=SkylichtDemo_${file_version}_MacOS.zip
          cd Bin/Release
          7z a ${output} *.*
          cd ../..
          cp Bin/Release/${output} Build
          ls -l Build
    #- name: Result
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: SkylichtDemo_MacOS
    #    path: Build

  IOS:
    runs-on: macos-latest
    env:
      PLATFORM: SIMULATORARM64
    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: |
          cd Assets
          chmod +x ../Tools/PVRTexTool/darwin/PVRTexToolCLI
          python BuildTextureCompressETC.py
          python BuildAssetBundles.py
          cd ..
          cmake -S . -B ./PrjIOS -G Xcode -DCMAKE_TOOLCHAIN_FILE=./ios.cmake -DPLATFORM=${PLATFORM}
          cd PrjIOS
          cmake --build . --config "Release"
          cd ..
      - name: Package
        run: |
          brew install p7zip
          mkdir Build
          ls -l Bin/${PLATFORM}/Release
          version=$(cat "Version.txt")
          file_version=${version//./_}
          output=SkylichtDemo_${file_version}_IOS.zip
          cd Bin/${PLATFORM}/Release
          7z a ${output} *.*
          cd ../../..
          cp Bin/${PLATFORM}/Release/${output} Build
          ls -l Build
    #- name: Result
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: SkylichtDemo_IOS
    #    path: Build

  Windows-Static:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        shell: cmd
        run: |
          cd Assets
          python BuildAssetBundles.py
          cd ..
          cmake -S . -B ./PrjVisualStudio -G "Visual Studio 17 2022" -A x64
          cmake --build ./PrjVisualStudio --config "Release"
      - name: Unit Test
        run: |
          cd PrjVisualStudio
          ctest -C Release --verpose
          cd ..
      - name: Package
        run: |
          dir Bin\Release

  Windows-Shared:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        shell: cmd
        run: |
          cd Assets
          python BuildAssetBundles.py
          cd ..
          cmake -S . -B ./PrjVisualStudio -G "Visual Studio 17 2022" -A x64 -DBUILD_SHARED_LIBS=ON
          cmake --build ./PrjVisualStudio --config "Release"
      - name: Unit Test
        run: |
          cd PrjVisualStudio
          ctest -C Release --verpose
          cd ..
      - name: Package
        run: |
          dir Bin\Release
