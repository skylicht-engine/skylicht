// File Generated by Assets/BuildShader.py - source: [BakePointLightFS.d.glsl : _]
precision mediump float;
uniform samplerCube uShadowMap;
in vec3 varWorldPosition;
in vec3 varWorldNormal;
uniform vec4 uLightPosition;
uniform vec4 uLightAttenuation;
uniform vec4 uLightColor;
out vec4 FragColor;
void main(void)
{
	vec3 direction = uLightPosition.xyz - varWorldPosition;
	float distance = length(direction);
	float attenuation = max(0.0, 1.0 - (distance * uLightAttenuation.y)) * uLightColor.a;
	vec3 lightDir = normalize(direction);
	float NdotL = max(0.0, dot(lightDir, varWorldNormal));
	float bias = 0.2;
	float d = distance - bias;
	float sampledDistance = texture(uShadowMap, -lightDir).r;
	float shadow = step(sampledDistance, d);
	shadow = max(1.0 - shadow, 0.0);
	vec3 directionalLightColor = NdotL * attenuation * uLightColor.rgb * shadow;
	FragColor = vec4(directionalLightColor/ 3.0, 1.0);
}
