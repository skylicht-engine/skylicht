version: '0.0.{build}'

# all brance build

image:
- Visual Studio 2017

environment:
  matrix:
    # Android
    - platform: Android
      arch: armeabi-v7a
      toolchain: Android
      configuration: Release
      cmake_args: -B ./PrjAndroid -G "MinGW Makefiles"      
      android_ndk: C:/ProgramData/Microsoft/android_ndk64/android-ndk-r17
      android_abi: armeabi-v7a with NEON
      android_min_sdk: 21
      
    # Cygwin/x64/Release
    - platform: Cygwin x64
      arch: x64
      toolchain: Cygwin
      configuration: Release
      cmake_args: -B ./PrjCygwin -G "Unix Makefiles"
      
    # Win32/x64/Release
    - platform: Win32 x64
      arch: x64
      toolchain: MSVC
      configuration: Release
      cmake_args: -B ./PrjVisualStudio -G "Visual Studio 15 2017" -A x64
      cmake_build: /verbosity:minimal /maxcpucount
      
    # Win32/x86/Release
    - platform: Win32 x86
      arch: x86
      toolchain: MSVC
      configuration: Release
      cmake_args: -B ./PrjVisualStudio -G "Visual Studio 15 2017" -A Win32
      cmake_build: /verbosity:minimal /maxcpucount
      
# clone directory
clone_folder: C:\Projects\Skylicht_Engine

# https://www.appveyor.com/docs/windows-images-software
install:
  # clone submodules
  - git submodule update --init --recursive
  
  # Install a recent CMake for "MinGW Makefiles"
  # - set CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.15.4/cmake-3.15.4-win64-x64.zip"
  # - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
  # - 7z x cmake.zip -oC:\projects\deps > nul
  # - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
  # - set PATH=C:\projects\deps\cmake\bin;%PATH%
  
  # remove conflict sh.exe
  - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  
  # set env for python
  - set PATH=C:\Python37;%PATH%
  
  # set env for cygwin
  - if "%toolchain%"=="Cygwin" set PATH=C:\cygwin64\bin;%PATH%

  # set env for android
  - if "%toolchain%"=="Android" set PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%
  
  # test version  
  - cmake --version  
  - python --version
  - echo %platform%
  
before_build:
  - cd C:\Projects\Skylicht_Engine
  - echo %arch%
  - echo %cmake_args%
  - if "%toolchain%"=="Android" (
      cmake -S . %cmake_args% -DTARGET_ARCH=ANDROID -DCMAKE_TOOLCHAIN_FILE=%android_ndk%/build/cmake/android.toolchain.cmake -DANDROID_ABI="%android_abi%" -DANDROID_ARM_NEON=ON -DANDROID_NATIVE_API_LEVEL=%android_min_sdk%
    ) else (
      cmake -S . %cmake_args%
    )

build_script:
  - if "%toolchain%"=="MSVC" (
      cmake --build ./PrjVisualStudio --config "%configuration%" -- %cmake_build%
    )
  - if "%toolchain%"=="Cygwin" (
      make -C PrjCygwin
    )
  - if "%toolchain%"=="Android" (
      mingw32-make -C PrjAndroid
    )

after_build:
  - mkdir Build
  - set output_zip=Build\SkylichtDemo_%toolchain%_%arch%.zip  
  - if "%toolchain%"=="MSVC" (
      7z a %output_zip% Bin\Windows\Libs\%configuration%\*.lib
    )
  - if "%toolchain%"=="Cygwin" (
      7z a %output_zip% Bin\Windows\Libs\*.a
    )
  - if "%toolchain%"=="Android" (
      7z a %output_zip% Bin\Android\Libs\*.a
    )
  
test: off

artifacts:
  - path: Build\*.zip
      
#for:
#  -
    #branches:
    #  only:
    #    - master
    #      configuration: Release
          
    #artifacts:
      # all zip build
      #- path: Build\*.zip
    
    #deploy:
    #- provider: GitHub
    #  auth_token:
    #    secure: the-token-is-hidden-on-purpose
    #  force_update: true
    #  on:
    #    APPVEYOR_REPO_TAG: true